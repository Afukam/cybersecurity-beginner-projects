def caesar_encrypt(plain_text, key):
    cipher_text = ""
    for c in plain_text:
        if c.isalpha():
            shift = ord('A') if c.isupper() else ord('a')
            c = chr((ord(c) - shift + key) % 26 + shift)
        cipher_text += c
    return cipher_text

def caesar_decrypt(cipher_text, key):
    return caesar_encrypt(cipher_text, -key)

def vigenere_encrypt(plain_text, key):
    cipher_text = ""
    key_len = len(key)
    for i, c in enumerate(plain_text):
        if c.isalpha():
            shift = ord(key[i % key_len]) - ord('A')
            shift = shift if c.isupper() else shift + 32
            c = chr((ord(c) - shift) % 26 + shift)
        cipher_text += c
    return cipher_text

def vigenere_decrypt(cipher_text, key):
    return vigenere_encrypt(cipher_text, ''.join([chr((ord(k) - ord('A')) % 26 + ord('A')) for k in key]))

def super_encrypt(plain_text, key):
    caesar_key = 3
    caesar_cipher_text = caesar_encrypt(plain_text, caesar_key)
    return vigenere_encrypt(caesar_cipher_text, key)

def super_decrypt(cipher_text, key):
    caesar_key = 3
    caesar_plain_text = vigenere_decrypt(cipher_text, key)
    return caesar_decrypt(caesar_plain_text, caesar_key)

key = "LEMON" # Example key

# Encrypt text
plain_text = "Hello, world!"
cipher_text = super_encrypt(plain_text, key)
print("Encrypted text:", cipher_text)

# Decrypt text
decrypted_text = super_decrypt(cipher_text, key)
print("Decrypted text:", decrypted_text)
